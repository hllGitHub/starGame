{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","AudioClip","onLoad","groundY","y","height","timer","starDuration","spawnNewStar","score","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","Math","random","randX","randY","jumpHeight","maxX","width","v2","update","dt","gameOver","console","log","gainScore","string","audioEngine","playEffect","stopAllActions","director","loadScene"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFJ;AAMR;AACAC,yBAAiB,CAPT;AAQRC,yBAAiB,CART;AASR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAVA;AAcR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAfA;AAmBR;AACAE,sBAAc;AACVR,qBAAS,IADC;AAEVC,kBAAMP,GAAGe;AAFC,SApBN;AAwBR;AACAC,oBAAYhB,GAAGiB;AAzBP,KAHP;;AA+BL;;AAEAC,YAAQ,kBAAY;AAChB;AACA,aAAKC,OAAL,GAAe,KAAKR,MAAL,CAAYS,CAAZ,GAAgB,KAAKT,MAAL,CAAYU,MAAZ,GAAmB,CAAlD;AACA;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA;AACA,aAAKC,YAAL;AACA;AACA,aAAKC,KAAL,GAAa,CAAb;AACH,KA3CI;;AA6CLD,kBAAc,wBAAY;AACtB,YAAIE,UAAU1B,GAAG2B,WAAH,CAAe,KAAKtB,UAApB,CAAd;AACA,aAAKuB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACA;AACA,aAAKV,YAAL,GAAoB,KAAKb,eAAL,GAAuBwB,KAAKC,MAAL,MAAiB,KAAK1B,eAAL,GAAuB,KAAKC,eAA7C,CAA3C;AACA,aAAKY,KAAL,GAAa,CAAb;AACH,KAtDI;;AAwDLS,wBAAoB,8BAAY;AAC5B,YAAIK,QAAQ,CAAZ;AACA;AACA;AACA,YAAIC,QAAQ,KAAKlB,OAAL,GAAee,KAAKC,MAAL,KAAgB,KAAKtB,MAAL,CAAYmB,YAAZ,CAAyB,QAAzB,EAAmCM,UAAlE,GAA+E,EAA3F;AACA;AACA,YAAIC,OAAO,KAAKX,IAAL,CAAUY,KAAV,GAAgB,CAA3B;AACAJ,gBAAQ,CAACF,KAAKC,MAAL,KAAgB,GAAjB,IAAwB,CAAxB,GAA4BI,IAApC;AACA;AACA,eAAOvC,GAAGyC,EAAH,CAAML,KAAN,EAAaC,KAAb,CAAP;AACH,KAlEI;;AAoEL;;AAEA;;AAEA;AACAK,UAzEK,kBAyEGC,EAzEH,EAyEO;AACR,YAAI,KAAKrB,KAAL,GAAa,KAAKC,YAAtB,EAAoC;AAChC,iBAAKqB,QAAL;AACA;AACH;AACDC,gBAAQC,GAAR,CAAY,UAAUH,EAAtB;AACA,aAAKrB,KAAL,IAAcqB,EAAd;AACAE,gBAAQC,GAAR,CAAY,kBAAkB,KAAKxB,KAAnC;AACH,KAjFI;;;AAmFLyB,eAAW,qBAAW;AAClB,aAAKtB,KAAL,IAAc,CAAd;AACA,aAAKX,YAAL,CAAkBkC,MAAlB,GAA2B,YAAY,KAAKvB,KAA5C;AACAzB,WAAGiD,WAAH,CAAeC,UAAf,CAA0B,KAAKlC,UAA/B,EAA2C,KAA3C;AACH,KAvFI;;AAyFL4B,cAAU,oBAAW;AACjB,aAAK/B,MAAL,CAAYsC,cAAZ,GADiB,CACe;AAChCnD,WAAGoD,QAAH,CAAYC,SAAZ,CAAsB,MAAtB,EAFiB,CAEe;AACnC;AA5FI,CAAT","file":"Game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: cc.AudioClip\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad: function () {\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height/2;\n        // 初始化计时器\n        this.timer = 0;\n        this.starDuration = 0;\n        // 生成一个新的星星\n        this.spawnNewStar();\n        // 初始化计分\n        this.score = 0;\n    },\n\n    spawnNewStar: function () {\n        var newStar = cc.instantiate(this.starPrefab);\n        this.node.addChild(newStar);\n        // cc.director.getScene().addChild(newStar);\n        newStar.setPosition(this.getNewStarPosition());\n        newStar.getComponent('Star').game = this;\n        // 重置计时器，根据消失时间范围随机取一个值\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        // Math.random() 随机产生0-1之间的小数\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width/2;\n        randX = (Math.random() - 0.5) * 2 * maxX;\n        // 返回星星坐标\n        return cc.v2(randX, randY);\n    },\n\n    // start () {\n\n    // },\n\n    // 一帧，1s有60帧，所以update的时间大约是0.01667左右\n    update (dt) {\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            return;\n        }\n        console.log('dt = ' + dt)\n        this.timer += dt\n        console.log('this.timer = ' + this.timer)\n    },\n\n    gainScore: function() {\n        this.score += 1;\n        this.scoreDisplay.string = 'Score: ' + this.score;\n        cc.audioEngine.playEffect(this.scoreAudio, false)\n    },\n\n    gameOver: function() {\n        this.player.stopAllActions();   // 停止 player 节点的跳跃动作，stopAllActions ,会停止对应节点上的所有action\n        cc.director.loadScene('game');  // 重新加载场景，cc.director 是一个管理游戏逻辑流程的单例对象\n    },\n});\n"]}