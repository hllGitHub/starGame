{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Game.js"],"names":["Player","require","Star","Game","cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","btnNode","gameOverNode","scoreDisplay","Label","scoreAudio","AudioClip","onLoad","groundY","y","height","currentStar","currentStarX","timer","starDuration","enabled","starPool","NodePool","startGame","resetScore","x","active","startMoveAt","v2","spawnNewStar","newStar","size","get","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","init","startTimer","despawnStar","star","put","Math","random","width","randX","randY","jumpHeight","maxX","update","dt","gameOver","console","log","gainScore","score","string","audioEngine","playEffect","toString","stopMove","destroy"],"mappings":"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","file":"Game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nconst Player = require('Player');\nconst Star = require('Star');\n\nvar Game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: Player\n        },\n        btnNode: {\n            default: null,\n            type: cc.Node\n        },\n        gameOverNode: {\n            default: null,\n            type: cc.Node\n        },\n        // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: cc.AudioClip,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad: function () {\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height/2;\n\n        this.currentStar = null;\n        this.currentStarX = 0;\n\n        this.timer = 0;\n        this.starDuration = 0;\n\n        this.enabled = false;\n\n        this.starPool = new cc.NodePool('Star');\n\n        // this.player.stopMove()\n\n        // var player1 = require(\"Player\")\n        // var instance = new player1()\n        // instance.stopMove()\n    },\n\n    startGame: function () {\n        // 开始游戏\n        this.resetScore()\n        this.enabled = true\n        // 初始化计分\n        this.btnNode.x = 3000;\n        this.gameOverNode.active = false\n        this.player.startMoveAt(cc.v2(0, this.groundY))\n\n        this.spawnNewStar();\n    },\n\n    spawnNewStar: function () {\n        var newStar = null;\n        if (this.starPool.size() > 0) {\n            newStar = this.starPool.get(this)\n        } else {\n            newStar = cc.instantiate(this.starPrefab)\n        }\n\n        this.node.addChild(newStar);\n        newStar.setPosition(this.getNewStarPosition());\n        newStar.getComponent('Star').init(this)\n\n        this.startTimer()\n        this.currentStar = newStar\n    },\n\n    despawnStar(star) {\n        this.starPool.put(star);\n        this.spawnNewStar();\n    },\n\n    startTimer: function() {\n        // 重置计时器，根据消失时间范围随机取一个值\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        if (!this.currentStar) {\n            this.currentStarX = (Math.random() - 0.5) * 2 * this.node.width/2;\n        }\n\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        // Math.random() 随机产生0-1之间的小数\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width/2;\n        if (this.currentStarX >= 0) {\n            randX = -Math.random() * maxX\n        } else {\n            randX = Math.random() * maxX\n        }\n        this.currentStarX = randX\n        // 返回星星坐标\n        return cc.v2(randX, randY);\n    },\n\n    // 一帧，1s有60帧，所以update的时间大约是0.01667左右\n    update (dt) {\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            this.enabled = false\n            return;\n        }\n        this.timer += dt\n        console.log('this.timer = ' + this.timer)\n    },\n\n    gainScore: function() {\n        this.score += 1;\n        this.scoreDisplay.string = 'Score: ' + this.score;\n        cc.audioEngine.playEffect(this.scoreAudio, false)\n    },\n\n    resetScore: function() {\n        this.score = 0;\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n    },\n\n    gameOver: function() {\n        console.log(\"游戏结束了\")\n        // this.player.stopAllActions();   // 停止 player 节点的跳跃动作，stopAllActions ,会停止对应节点上的所有action\n        // cc.director.loadScene('game');  // 重新加载场景，cc.director 是一个管理游戏逻辑流程的单例对象\n        this.gameOverNode.active = true\n        this.player.enabled = false\n        this.player.stopMove()\n        this.currentStar.destroy()\n        this.btnNode.x = 0\n    },\n});\n\n\n"]}