{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","AudioClip","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","onLoad","jumpAction","node","runAction","accLeft","accRight","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","event","console","log","keyCode","KEY","a","d","update","dt","x","Math","abs","onDescroy","off"],"mappings":"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","file":"Player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 主角跳跃高度\n        jumpHeight: 0,\n        // 主角跳跃时间\n        jumpDuration: 0,\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n        // 跳跃音效资源\n        jumpAudio: cc.AudioClip\n    },\n\n    setJumpAction: function() {\n        // 跳跃上升\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        // 下落\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionOut());\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\n        var callback = cc.callFunc(this.playJumpSound, this);\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback))\n    },\n\n    playJumpSound: function() {\n        // 调用声音引擎播放声音\n        cc.audioEngine.playEffect(this.jumpAudio, false)\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad: function() {\n        // 初始化跳跃动作\n        this.jumpAction = this.setJumpAction();\n        this.node.runAction(this.setJumpAction())\n\n        // // 加速度方向开关\n        this.accLeft = false\n        this.accRight = false\n\n        // 初始化当前速度\n        this.xSpeed = 0\n\n        // // 初始化键盘监听\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);   \n    },\n\n    onKeyDown(event) {\n        console.log(\"keyCode = \" + event.keyCode)\n        console.log(\"a = \" + cc.KEY.a)\n        console.log(\"d = \" + cc.KEY.d)\n        switch(event.keyCode) {\n            case cc.KEY.a:\n                this.accLeft = true\n                break;\n            case cc.KEY.d:\n                this.accRight = true\n                break\n        }\n    },\n\n    // Demo里使用的是cc.macro.Key.a，这是低版本的用法，现在统一使用cc.Key.a\n    onKeyUp(event) {\n        switch(event.keyCode) {\n            case cc.KEY.a:\n                this.accLeft = false\n                break\n            case cc.KEY.d:\n                this.accRight = false\n                break\n        }\n    },\n\n    update: function (dt) {\n        if (this.accLeft) {\n            this.xSpeed  -= this.accel * dt;\n            console.log(this.node.x)\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n            console.log(this.node.x)\n        }\n\n        // 限制主角的速度不能超过最大值\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n        this.node.x += this.xSpeed * dt;\n    },\n\n    onDescroy() {\n        // 取消键盘输入监听\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this)\n        cc.systemEvent.off(cc.systemEvent.EventType.KEY_UP, this.onKeyUp, this)\n    }\n\n    // start: function () {\n    //     this.setJumpAction()\n    // },\n});\n"]}