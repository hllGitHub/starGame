{"version":3,"sources":["Game.js"],"names":["Player","require","Star","ScoreFX","Game","cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","scoreFXPrefab","maxStarDuration","minStarDuration","ground","Node","player","controlDisplay","Label","btnNode","gameOverNode","scoreDisplay","scoreAudio","AudioClip","keyboardHint","multiline","touchHint","onLoad","groundY","y","height","currentStar","currentStarX","timer","starDuration","enabled","starPool","NodePool","scorePool","hintText","sys","isMobile","string","startGame","resetScore","x","active","startMoveAt","v2","spawnNewStar","newStar","size","get","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","init","startTimer","despawnStar","star","put","Math","random","width","randX","randY","jumpHeight","maxX","gainScore","pos","score","fx","spawnScoreFX","play","audioEngine","playEffect","toString","console","log","despawnScoreFX","scoreFX","update","dt","gameOver","stopMove","destroy"],"mappings":"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","file":"Game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nconst Player = require('Player');\nconst Star = require('Star');\nconst ScoreFX = require('ScoreFX');\n\nvar Game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        scoreFXPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: Player\n        },\n        controlDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        btnNode: {\n            default: null,\n            type: cc.Node\n        },\n        gameOverNode: {\n            default: null,\n            type: cc.Node\n        },\n        // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: cc.AudioClip,\n        keyboardHint: {\n            default: '',\n            multiline: true\n        },\n        touchHint: {\n            default: '',\n            multiline: true\n        },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad: function () {\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height/2;\n\n        this.currentStar = null;\n        this.currentStarX = 0;\n\n        this.timer = 0;\n        this.starDuration = 0;\n\n        this.enabled = false;\n\n        this.starPool = new cc.NodePool('Star');\n        this.scorePool = new cc.NodePool('ScoreFX')\n\n        var hintText = cc.sys.isMobile ? this.touchHint : this.keyboardHint\n        this.controlDisplay.string = hintText\n    },\n\n    startGame: function () {\n        // 开始游戏\n        this.resetScore()\n        this.enabled = true\n        // 初始化计分\n        this.btnNode.x = 3000;\n        this.gameOverNode.active = false\n        this.player.startMoveAt(cc.v2(0, this.groundY))\n\n        this.spawnNewStar();\n    },\n\n    spawnNewStar: function () {\n        var newStar = null;\n        if (this.starPool.size() > 0) {\n            newStar = this.starPool.get(this)\n        } else {\n            newStar = cc.instantiate(this.starPrefab)\n        }\n\n        this.node.addChild(newStar);\n        newStar.setPosition(this.getNewStarPosition());\n        newStar.getComponent('Star').init(this)\n\n        this.startTimer()\n        this.currentStar = newStar\n    },\n\n    despawnStar(star) {\n        this.starPool.put(star);\n        this.spawnNewStar();\n    },\n\n    startTimer: function() {\n        // 重置计时器，根据消失时间范围随机取一个值\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        if (!this.currentStar) {\n            this.currentStarX = (Math.random() - 0.5) * 2 * this.node.width/2;\n        }\n\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        // Math.random() 随机产生0-1之间的小数\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width/2;\n        if (this.currentStarX >= 0) {\n            randX = -Math.random() * maxX\n        } else {\n            randX = Math.random() * maxX\n        }\n        this.currentStarX = randX\n        // 返回星星坐标\n        return cc.v2(randX, randY);\n    },\n\n    gainScore: function(pos) {\n        this.score += 1;\n        this.scoreDisplay.string = 'Score: ' + this.score;\n\n        // 播放特效\n        var fx = this.spawnScoreFX();\n        this.node.addChild(fx.node)\n        fx.node.setPosition(pos)\n        fx.play()\n\n        cc.audioEngine.playEffect(this.scoreAudio, false)\n    },\n\n    resetScore: function() {\n        this.score = 0;\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n    },\n\n    spawnScoreFX: function() {\n        var fx;\n        if (this.scorePool.size() > 0) {\n            fx = this.scorePool.get();\n            return fx.getComponent('ScoreFX');\n        } else {\n            fx = cc.instantiate(this.scoreFXPrefab).getComponent('ScoreFX');\n            console.log(\"fx is \" + fx)\n            fx.init(this)\n            return fx\n        }\n    },\n\n    despawnScoreFX (scoreFX) {\n        this.scorePool.put(scoreFX)\n    },\n\n    // 一帧，1s有60帧，所以update的时间大约是0.01667左右\n    update (dt) {\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            this.enabled = false\n            return;\n        }\n        this.timer += dt\n    },\n\n    gameOver: function() {\n        console.log(\"游戏结束了\")\n        // this.player.stopAllActions();   // 停止 player 节点的跳跃动作，stopAllActions ,会停止对应节点上的所有action\n        // cc.director.loadScene('game');  // 重新加载场景，cc.director 是一个管理游戏逻辑流程的单例对象\n        this.gameOverNode.active = true\n        this.player.enabled = false\n        this.player.stopMove()\n        this.currentStar.destroy()\n        this.btnNode.x = 0\n    },\n});\n\n\n"]}